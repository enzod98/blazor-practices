@using Entities;
@using Business;

@inject NavigationManager NavManager

<div>
    <EditForm Model="oStorage">
        <div class="form-group">
            <label>Bodega:</label>
            <InputSelect @bind-Value="oStorage.WarehouseId" class="form-control">
                <option>Seleccione una bodega...</option>
                @foreach(var item in warehouses)
                {
                    <option value="@item.WarehouseId">@item.WarehouseName</option>
                }
            </InputSelect>
        </div>

        <div class="form-group">
            <label>Producto:</label>
            <InputSelect @bind-Value="oStorage.ProductId" class="form-control">
                <option>Seleccione un producto...</option>
                @foreach (var item in products)
                {
                    <option value="@item.ProductId">@item.ProductName</option>
                }
            </InputSelect>
        </div>

        <input type="button" value="Almacenar producto" @onclick="SaveStorage" />
    </EditForm>
    <div class="text-center h4">
        @message
    </div>
</div>

@code {
    StorageEntity oStorage = new StorageEntity();

    List<WarehouseEntity> warehouses = new List<WarehouseEntity>();
    List<ProductEntity> products = new List<ProductEntity>();
    string message;

    protected override async Task OnInitializedAsync()
    {
        warehouses = B_Warehouse.EntityList();
        products = B_Product.EntityList();
    }

    private void SaveStorage()
    {
        oStorage.StorageId = $"{oStorage.WarehouseId}-{oStorage.ProductId}";
        if (!B_Storage.IsProductInWarehouse(oStorage.StorageId))
        {
            oStorage.LastUpdate = DateTime.Now;
            B_Storage.CreateItem(oStorage);
            //NavManager.NavigateTo("warehouses/list");

            message = "Producto almacenado!";
        }
        else
        {
            message = "El producto ya existe!";   
        }

    }

}
